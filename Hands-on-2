         CLIPS (6.4.1 4/8/23)
CLIPS> (deftemplate disease
(slot name)
(multislot signs)
(multislot symtoms)
)
CLIPS> (assert(disease(name "H1N1")
(signs "Chest_Pain" "Difficulty_Breathing")
(symtoms "Dizziness" "Weakness")))
<Fact-1>
CLIPS> (assert(disease(name "COVID-19")
(signs "Fever" "Fatigue")
(symtoms "Headache" "Loss_of_taste")))
<Fact-2>
CLIPS> (assert(disease(name "Gastritis")
(signs "Stomachache" "Vomit")
(symtoms "Stomachache" "Loss_of_appetite")))
<Fact-3>
CLIPS> (assert(disease(name "Obesidad")
(signs "Weight_gain" "Cramps")
(symtoms "Fatigue" "Swelling")))
<Fact-4>
CLIPS> (assert(disease(name "Diabetes")
(signs "Increased_thirst" "Blurred_vision")
(symtoms "Ulcers" "Tingling")))
<Fact-5>
CLIPS> (assert(disease(name "Neumonia")
(signs "Cough" "Fever")
(symtoms "Stabbing_chest" "Shallow_breathing")))
<Fact-6>
CLIPS> (defrule search-disease "search"
(disease(name ?i) (signs $?j) (symtoms $?k))
=>
(printout t "*****************" crlf "[-]disease" ?i crlf "-signs:" ?j crlf "- symptoms:" ?k crlf)
)
CLIPS> (agenda)
0      search-disease: f-6
0      search-disease: f-5
0      search-disease: f-4
0      search-disease: f-3
0      search-disease: f-2
0      search-disease: f-1
For a total of 6 activations.
CLIPS> (facts)
f-1     (disease (name "H1N1") (signs "Chest_Pain" "Difficulty_Breathing") (symtoms "Dizziness" "Weakness"))
f-2     (disease (name "COVID-19") (signs "Fever" "Fatigue") (symtoms "Headache" "Loss_of_taste"))
f-3     (disease (name "Gastritis") (signs "Stomachache" "Vomit") (symtoms "Stomachache" "Loss_of_appetite"))
f-4     (disease (name "Obesidad") (signs "Weight_gain" "Cramps") (symtoms "Fatigue" "Swelling"))
f-5     (disease (name "Diabetes") (signs "Increased_thirst" "Blurred_vision") (symtoms "Ulcers" "Tingling"))
f-6     (disease (name "Neumonia") (signs "Cough" "Fever") (symtoms "Stabbing_chest" "Shallow_breathing"))
For a total of 6 facts.
CLIPS> (defrule delete-disease "Borrar enfermedad"
	=>
	(printout t crlf "[*] Ingrese ID de enfermedad a borrar: ")
	(bind ?d (read))
	(retract ?d)
	(println t crlf "[+] Enfermedad con fact (" ?d ") eliminada con Ã©xito")
)
(defrule show-disease "Mostrar enfermedades"
   ?dis <- (disease (name ?n))
   =>
   (bind ?in (fact-index ?dis))
   (printout t "[" ?in "] " ?n crlf)
)

#(Facts)
#(Run)
